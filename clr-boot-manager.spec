#
# This file is auto-generated. DO NOT EDIT
# Generated by: autospec.py
#
%define keepstatic 1
Name     : clr-boot-manager
Version  : 3.2.11
Release  : 401
URL      : file:///aot/build/clearlinux/packages/clr-boot-manager/clr-boot-manager-v3.2.11.tar.gz
Source0  : file:///aot/build/clearlinux/packages/clr-boot-manager/clr-boot-manager-v3.2.11.tar.gz
Summary  : No detailed summary available
Group    : Development/Tools
License  : GPL-2.0
Requires: clr-boot-manager-autostart = %{version}-%{release}
Requires: clr-boot-manager-bin = %{version}-%{release}
Requires: clr-boot-manager-data = %{version}-%{release}
Requires: clr-boot-manager-man = %{version}-%{release}
Requires: clr-boot-manager-services = %{version}-%{release}
BuildRequires : efivar-dev
BuildRequires : gnu-efi-dev
BuildRequires : pkgconfig(blkid)
BuildRequires : pkgconfig(systemd)
BuildRequires : valgrind
# Suppress stripping binaries
%define __strip /bin/true
%define debug_package %{nil}
Patch1: 0001-Ease-performance-impact-of-kernel-booted-detection.patch
Patch2: 0002-Motd-updating-script-for-clearlinux.patch
Patch3: 0003-Don-t-set-root-for-Oracle-kernels.patch
Patch4: 0004-Add-Clear-Linux-kvm-hyperv-to-native-switch.patch

%description
No detailed description available

%package autostart
Summary: autostart components for the clr-boot-manager package.
Group: Default

%description autostart
autostart components for the clr-boot-manager package.


%package bin
Summary: bin components for the clr-boot-manager package.
Group: Binaries
Requires: clr-boot-manager-data = %{version}-%{release}
Requires: clr-boot-manager-services = %{version}-%{release}

%description bin
bin components for the clr-boot-manager package.


%package data
Summary: data components for the clr-boot-manager package.
Group: Data

%description data
data components for the clr-boot-manager package.


%package man
Summary: man components for the clr-boot-manager package.
Group: Default

%description man
man components for the clr-boot-manager package.


%package services
Summary: services components for the clr-boot-manager package.
Group: Systemd services

%description services
services components for the clr-boot-manager package.


%prep
%setup -q -n clr-boot-manager
cd %{_builddir}/clr-boot-manager
%patch1 -p1
%patch2 -p1
%patch3 -p1
%patch4 -p1

%build
unset http_proxy
unset https_proxy
unset no_proxy
export SSL_CERT_FILE=/var/cache/ca-certs/anchors/ca-certificates.crt
export LANG=C.UTF-8
export SOURCE_DATE_EPOCH=1659282170
## altflags1f content
## altflags1
unset CFLAGS
unset CXXFLAGS
unset LDFLAGS
export AR=/usr/bin/gcc-ar
export RANLIB=/usr/bin/gcc-ranlib
export NM=/usr/bin/gcc-nm
export CFLAGS="-O3 -march=skylake -mtune=skylake -Wl,-O2 -falign-functions=32 -mprefer-vector-width=256 -fuse-ld=bfd -fno-semantic-interposition -fno-stack-protector -malign-data=cacheline -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -mno-avx2 -O3 -fno-tree-vectorize -fno-tree-loop-vectorize -fno-tree-slp-vectorize -mpopcnt -pipe"
export KCFLAGS="-O3 -march=skylake -mtune=skylake -Wl,-O2 -falign-functions=32 -mprefer-vector-width=256 -fuse-ld=bfd -fno-semantic-interposition -fno-stack-protector -malign-data=cacheline -mno-sse -mno-mmx -mno-sse2 -mno-3dnow -mno-avx -mno-avx2 -O3 -fno-tree-vectorize -fno-tree-loop-vectorize -fno-tree-slp-vectorize -mpopcnt -pipe"
export MAKEFLAGS=%{?_smp_mflags}
%global _lto_cflags 1
%global _disable_maintainer_mode 1
export CCACHE_DISABLE=true
export CCACHE_NOHASHDIR=true
export CCACHE_CPP2=true
export CCACHE_SLOPPINESS=pch_defines,time_macros,locale,file_stat_matches,file_stat_matches_ctime,include_file_ctime,include_file_mtime,modules,system_headers,clang_index_store,file_macro
export CCACHE_DIR=/var/tmp/ccache
export CCACHE_BASEDIR=/builddir/build/BUILD
export PKG_CONFIG_PATH="/usr/lib64/pkgconfig:/usr/share/pkgconfig"
export LD_LIBRARY_PATH="/usr/local/nvidia/lib64:/usr/local/nvidia/lib64/gbm:/usr/local/nvidia/lib64/vdpau:/usr/local/nvidia/lib64/xorg/modules/drivers:/usr/local/nvidia/lib64/xorg/modules/extensions:/usr/local/cuda/lib64:/usr/lib64/glibc-hwcaps/x86-64-v3:/usr/lib64/haswell:/usr/lib64/dri:/usr/lib64:/usr/lib:/usr/share:/usr/lib64/wine:/usr/local/nvidia/lib32:/usr/local/nvidia/lib32/vdpau:/usr/lib32:/usr/lib32/wine"
export LIBRARY_PATH="/usr/local/nvidia/lib64:/usr/local/nvidia/lib64/gbm:/usr/local/nvidia/lib64/vdpau:/usr/local/nvidia/lib64/xorg/modules/drivers:/usr/local/nvidia/lib64/xorg/modules/extensions:/usr/local/cuda/lib64:/usr/lib64/glibc-hwcaps/x86-64-v3:/usr/lib64/haswell:/usr/lib64/dri:/usr/lib64:/usr/lib:/usr/share:/usr/lib64/wine:/usr/local/nvidia/lib32:/usr/local/nvidia/lib32/vdpau:/usr/lib32:/usr/lib32/wine"
export PATH="/usr/lib64/ccache/bin:/usr/local/cuda/bin:/usr/local/nvidia/bin:/usr/bin/haswell:/usr/bin:/usr/sbin"
export CPATH="/usr/local/cuda/include"
export DISPLAY=:0
export __GL_SYNC_TO_VBLANK=1
export __GL_SYNC_DISPLAY_DEVICE=HDMI-0
export VDPAU_NVIDIA_SYNC_DISPLAY_DEVICE=HDMI-0
export LANG=en_US.UTF-8
export XDG_CONFIG_DIRS=/usr/share/xdg:/etc/xdg
export XDG_SEAT=seat0
export XDG_SESSION_TYPE=tty
export XDG_CURRENT_DESKTOP=KDE
export XDG_SESSION_CLASS=user
export XDG_VTNR=1
export XDG_SESSION_ID=1
export XDG_RUNTIME_DIR=/run/user/1000
export XDG_DATA_DIRS=/usr/local/share:/usr/share
export KDE_SESSION_VERSION=5
export KDE_SESSION_UID=1000
export KDE_FULL_SESSION=true
export KDE_APPLICATIONS_AS_SCOPE=1
export VDPAU_DRIVER=nvidia
export LIBVA_DRIVER_NAME=vdpau
export LIBVA_DRIVERS_PATH=/usr/lib64/dri
export GTK_RC_FILES=/etc/gtk/gtkrc
export FONTCONFIG_PATH="/usr/share/defaults/fonts"
export GTK_IM_MODULE="xim"
export QT_IM_MODULE="cedilla"
export FREETYPE_PROPERTIES="truetype:interpreter-version=40"
export NO_AT_BRIDGE=1
export GTK_A11Y=none
export PLASMA_USE_QT_SCALING=1
export QT_AUTO_SCREEN_SCALE_FACTOR=0
export QT_ENABLE_HIGHDPI_SCALING=0
export QT_FONT_DPI=88
export GTK_USE_PORTAL=1
export DESKTOP_SESSION=plasma
## altflags1f end
CFLAGS="$CFLAGS" CXXFLAGS="$CXXFLAGS" LDFLAGS="$LDFLAGS" LIBS="$LIBS" meson --libdir=lib64 --sysconfdir=/usr/share --prefix=/usr --buildtype=plain -Ddefault_library=both  -Dwith-vendor-prefix=Clear-linux \
-Dwith-kernel-modules-dir=/usr/lib/modules \
-Dwith-kernel-namespace=org.clearlinux \
-Dwith-bootloader=shim-systemd-boot builddir
ninja --verbose %{?_smp_mflags} -C builddir



%install
DESTDIR=%{buildroot} ninja -C builddir install

## install_append content
mkdir -p %{buildroot}/usr/lib/systemd/system/multi-user.target.wants/
ln -s ../clr-boot-manager-booted.service %{buildroot}/usr/lib/systemd/system/multi-user.target.wants/clr-boot-manager-booted.service
mkdir -p %{buildroot}/usr/bin
install -m0755 clr-boot-manager-motd.sh %{buildroot}/usr/bin/clr-boot-manager-motd.sh
mkdir -p %{buildroot}/usr/lib/systemd/system/update-triggers.target.wants
ln -sf ../clr-boot-manager-motd.service %{buildroot}/usr/lib/systemd/system/update-triggers.target.wants/clr-boot-manager-motd.service
## install_append end
## start %find_lang macros
## end %find_lang macros

%files
%defattr(-,root,root,-)

%files autostart
%defattr(-,root,root,-)
/usr/lib/systemd/system/multi-user.target.wants/clr-boot-manager-booted.service

%files bin
%defattr(-,root,root,-)
/usr/bin/clr-boot-manager
/usr/bin/clr-boot-manager-motd.sh

%files data
%defattr(-,root,root,-)
/usr/share/bash-completion/completions/clr-boot-manager
/usr/share/zsh/site-functions/_clr-boot-manager

%files man
%defattr(0644,root,root,0755)
/usr/share/man/man1/clr-boot-manager.1

%files services
%defattr(-,root,root,-)
%exclude /usr/lib/systemd/system/multi-user.target.wants/clr-boot-manager-booted.service
/usr/lib/systemd/system/clr-boot-manager-booted.service
/usr/lib/systemd/system/update-triggers.target.wants/clr-boot-manager-motd.service
